# Generated by Django 2.1.7 on 2019-03-29 07:44

import DjangoUeditor.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_exsist', models.BooleanField(default=True, verbose_name='是否存在')),
                ('is_admin', models.BooleanField(default=0, verbose_name='管理员标记')),
                ('head_ico', models.ImageField(blank=True, default='', upload_to='head_ico', verbose_name='头像')),
                ('user_id', models.CharField(default='806c', max_length=10, verbose_name='用户uuid')),
                ('description', models.CharField(default='', max_length=500, verbose_name='用户描述')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'df_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_exsist', models.BooleanField(default=True, verbose_name='是否存在')),
                ('blog_id', models.CharField(default='746dde8e', max_length=15, verbose_name='文章标识符')),
                ('title', models.CharField(max_length=50, verbose_name='文章标题')),
                ('body', DjangoUeditor.models.UEditorField(verbose_name='正文')),
                ('love', models.IntegerField(default=0, verbose_name='点赞人数')),
                ('look_times', models.IntegerField(default=0, verbose_name='浏览次数')),
                ('is_secret', models.BooleanField(default=False, verbose_name='仅自己可见')),
                ('description', models.CharField(default='', max_length=50, verbose_name='文章描述')),
                ('author_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '博客文章',
                'verbose_name_plural': '博客文章',
                'db_table': 'df_articles',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_exsist', models.BooleanField(default=True, verbose_name='是否存在')),
                ('content', DjangoUeditor.models.UEditorField(default='', verbose_name='')),
                ('love', models.IntegerField(default=0, verbose_name='赞同人数')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Articles', verbose_name='评论文章')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='评论者')),
            ],
            options={
                'verbose_name': '文章评论',
                'verbose_name_plural': '文章评论',
                'db_table': 'df_comments',
            },
        ),
        migrations.CreateModel(
            name='LikeCollect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked', models.BooleanField(default=False, verbose_name='赞')),
                ('collected', models.BooleanField(default=False, verbose_name='收藏')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Articles', verbose_name='文章')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '收藏点赞',
                'verbose_name_plural': '收藏点赞',
                'db_table': 'df_collect_like',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100, verbose_name='消息内容')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('has_read', models.BooleanField(default=False, verbose_name='已读')),
                ('from_who', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='send_message', to=settings.AUTH_USER_MODEL, verbose_name='来自')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='own_message', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '消息',
                'verbose_name_plural': '消息',
                'db_table': 'df_message',
            },
        ),
        migrations.CreateModel(
            name='ReplyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_exsist', models.BooleanField(default=True, verbose_name='是否存在')),
                ('content', models.CharField(max_length=50, verbose_name='回复内容')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Articles', verbose_name='评论回复')),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='回复者')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_exsist', models.BooleanField(default=True, verbose_name='是否存在')),
                ('description', models.CharField(default='', max_length=200, verbose_name='描述')),
                ('img', models.ImageField(blank=True, default='', upload_to='share_img', verbose_name='分享图片')),
                ('auth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='分享者')),
            ],
            options={
                'verbose_name': '分享',
                'verbose_name_plural': '分享',
                'db_table': 'df_share',
            },
        ),
    ]
